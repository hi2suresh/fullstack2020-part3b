{"version":3,"sources":["components/PersonForm.js","services/HandleRest.js","components/Persons.js","components/Filter.js","components/Notification.js","components/App.js","index.js"],"names":["PersonForm","props","onHandleAdd","onNameChange","onNumberChange","newName","newNumber","onSubmit","onChange","value","type","baseUrl","axios","get","then","response","data","newObject","post","id","delete","Persons","showThesePersons","setPersons","map","obj","key","name","number","onClick","console","log","window","confirm","HandleRest","Filter","onFilterChange","filterValue","Notification","message","length","className","toLowerCase","includes","App","useState","persons","useEffect","initialPersons","showAll","setShowAll","SetFilterValue","notificationMessage","SetNotificationMessage","setNewName","setNewNumber","filter","person","event","target","preventDefault","existingPerson","find","setTimeout","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08a82af7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    const  onHandleAdd = props.onHandleAdd;\r\n    const onNameChange = props.onNameChange;\r\n    const onNumberChange = props.onNumberChange;\r\n    const newName = props.newName;\r\n    const newNumber = props.newNumber;\r\n    return(\r\n        <form onSubmit={onHandleAdd}> \r\n        <div>\r\n          name: <input onChange={onNameChange} value={newName} />\r\n        </div>\r\n        <div>number: <input onChange={onNumberChange} value={newNumber}/></div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\n\r\nexport default PersonForm","import axios from 'axios'\r\n\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n                .then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n         .then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n                .then(response => response.data)\r\n}\r\nconst remove = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n         .then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React from 'react'\r\nimport HandleRest from '../services/HandleRest'\r\n\r\n\r\nconst Persons = ({ showThesePersons, setPersons}) => {\r\n\r\n    const onHandleDelete = (id, name) => {\r\n        console.log(id);\r\n        if (window.confirm(`Do you really want to delete ${name}?`)) {\r\n            HandleRest.remove(id)\r\n                .then(response => {\r\n                    console.log(response);\r\n                    HandleRest\r\n                    .getAll()\r\n                      .then(response => {\r\n                          setPersons(response)\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showThesePersons.map((obj) => {\r\n                return <p key={obj.name}>{obj.name} {obj.number}\r\n                    <button key={obj.id} onClick={() => onHandleDelete(obj.id, obj.name)} id={obj.id}>delete</button> </p>\r\n            })}\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({onFilterChange, filterValue}) => {\r\n    return(\r\n        <div>filter shown with <input onChange={onFilterChange} value={filterValue}/></div>\r\n     )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message}) => {\r\n    if (message.length === 0) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        //Set the class name based on add or error message\r\n        <div className={message.toLowerCase().includes('add') ? 'note' : 'error'}>\r\n            {message}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react'\r\nimport PersonForm from './PersonForm'\r\nimport Persons from './Persons'\r\nimport Filter from './Filter'\r\nimport Notification from './Notification'\r\nimport HandleRest from '../services/HandleRest'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n\r\n    useEffect(() => {\r\n        HandleRest\r\n          .getAll()\r\n            .then(initialPersons => {\r\n                setPersons(initialPersons)\r\n          })\r\n      }, [])\r\n   \r\n    const [showAll, setShowAll] = useState(true);\r\n\r\n    const [filterValue, SetFilterValue] = useState('');\r\n    const onFilterChange = event => {\r\n        SetFilterValue(event.target.value);\r\n        setShowAll(false);\r\n    }\r\n\r\n    const [notificationMessage, SetNotificationMessage] = useState('')\r\n\r\n    let messageClassName = 'note';\r\n\r\n    const onHandleAdd = (event) => {\r\n        event.preventDefault();\r\n        const existingPerson = persons.find(person => person.name === newName);\r\n        if (existingPerson) {\r\n            /*if (window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)) {\r\n                const updatedDetails = { ...existingPerson, number: newNumber }\r\n                HandleRest.update(existingPerson.id, updatedDetails)\r\n                    .then(response => setPersons(persons.map(person => person.id === existingPerson.id ? updatedDetails : person)))\r\n                    .catch((error) => {\r\n                        messageClassName = 'error';\r\n                        SetNotificationMessage(\r\n                          `Information of '${existingPerson.name}' has already been removed from server`\r\n                        );\r\n                        setTimeout(() => {\r\n                            SetNotificationMessage('');\r\n                          messageClassName='note';\r\n                        }, 4000);\r\n                        setPersons(persons.filter(person => person.id !== existingPerson.id));\r\n                      })\r\n            }*/\r\n            messageClassName = 'error';\r\n            SetNotificationMessage(\r\n                `Information of '${existingPerson.name}' has already been added to server`\r\n              );\r\n              setTimeout(() => {\r\n                  SetNotificationMessage('');\r\n                messageClassName='note';\r\n              }, 4000);\r\n\r\n        } else {\r\n            const person = { name: newName, number: newNumber }\r\n            HandleRest.create(person)\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    setPersons(persons.concat(person));\r\n                    SetNotificationMessage(`Added ${person.name}`)\r\n                    setTimeout(() => {\r\n                        SetNotificationMessage('')\r\n                    }, 3000)\r\n                });\r\n\r\n        }\r\n        setNewName('')\r\n        setNewNumber('')\r\n        setShowAll(true)\r\n    }\r\n\r\n    const [newName, setNewName] = useState('')\r\n    const onNameChange = event => {\r\n        setNewName(event.target.value);\r\n    }\r\n\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const onNumberChange = event => setNewNumber(event.target.value)\r\n\r\n    const showThesePersons = showAll ? persons : persons.filter(person => person.name.toLowerCase().includes(filterValue.toLowerCase()))\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={notificationMessage}/>\r\n            <Filter onFilterChange={onFilterChange} filterValue={filterValue} />\r\n            <h2>Add a new Name and Number</h2>\r\n            <PersonForm onHandleAdd={onHandleAdd} onNameChange={onNameChange}\r\n                onNumberChange={onNumberChange} newName={newName} newNumber={newNumber} />\r\n            <h2>Numbers</h2>\r\n            <Persons showThesePersons={showThesePersons} setPersons={setPersons} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport axios from 'axios'\nimport App from './components/App'\nimport './index.css'\n\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}